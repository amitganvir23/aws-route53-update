---
- name: Configuring EC2 instances for Zookeeper
  hosts: localhost
  connection: local
#  remote_user: ubuntu
#  become: true
#  become_method: sudo
  gather_facts: no
  vars:
      - REGION: ap-southeast-2
      - ec2_tag_key: StackService
      - ec2_tag_value: glp-kafka-test-kafka
# --------------------------------------
##  JAVA
# --------------------------------------
      - java_home: /usr/local/java/jdk
      #- jdk_archive_url: http://download.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.tar.gz	  
      - jdk_archive_url: http://download.oracle.com/otn-pub/java/jdk/8u171-b11/512cd62ec5174c3487ac17c61aaa89e8/jdk-8u171-linux-x64.tar.gz
      - jdk_archive_filename: jdk-8u171-linux-x64.tar.gz
      #- jdk_version: jdk1.8.0_101
      - jdk_version: jdk1.8.0_171
# --------------------------------------
## Common -  Common Location information.
# --------------------------------------
#common:
      - install_base_path: /usr/local
      - soft_link_base_path: /opt

# --------------------------------------
## kafka
# --------------------------------------
#kafka:
      - version: 0.10.2.1
      - port: 9092
      - data_store: /mnt/data/kafka
      - log4j_rootlogger: INFO
      - topics: [ A, B, C, D ]
      - user: kafkaadmin
      - group: kafkaadmin
      - password: $6$SDOmVPRk$Jcb/qm2QTKsLABvBHx/CYtsgmShobAr7BwhWWbrrQIHfjndIzcbJhv1b2Dh2Rv.KgWhjTipT3MJUBQFf1g5O70
      - replication_factor: 1
      - partition_count: 8
      - url: http://www-us.apache.org/dist/kafka/{{ version }}/kafka_2.11-{{ version }}.tgz

  tasks:
   - name: Create a User `"{{ user }}"` for all our Hadoop Modules.
     user: name={{ user }} password={{ password }}

### ---- collecting Private IP

#   - name: Collecting Private IP address
#     shell: "aws --region {{ REGION }} ec2 describe-instances --filters \"Name=tag:{{ ec2_tag_key }},Values={{ ec2_tag_value }}\" \"Name=network-interface.addresses.private-ip-address,Values=*\" --query 'Reservations[*].Instances[*].{InstanceId:InstanceId,PrivateDnsName:PrivateDnsName,State:State.Name, IP:NetworkInterfaces[0].PrivateIpAddress}'|grep -w IP|cut -d ':' -f 2|tr -d ','|tr -d '\"'|sed 's/ //g'"
#     register: private_ips
### ---- 

   #- name: Install JDK on Zookeeper instances
   # Install JDK 1.7 and perform other bootstrap tasks
   - name: JDK | Oracle JDK | Make sure openjdk is uninstalled
     apt: pkg=openjdk-6-jdk state=absent

   - name: JDK | Oracle JDK | Make sure openjdk is uninstalled
     apt: pkg=openjdk-7-jdk state=absent

   - name: JDK | Oracle JDK | Make sure openjdk is uninstalled
     apt: pkg=openjdk-8-jdk state=absent

   - name: JDK | Oracle JDK | Make a directory that holds the Java binaries
     file: path=/usr/local/java state=directory

   - name: Download JDK
     get_url: url={{ jdk_archive_url }} dest=/mnt/{{ jdk_archive_filename }} mode=0644 validate_certs=no headers='Cookie:oraclelicense=accept-securebackup-cookie'

   - name: JDK | Oracle JDK | Unpack the compressed JDK binaries
     shell: "tar -xvzf /mnt/{{ jdk_archive_filename }} -C /usr/local/java creates=/usr/local/java/{{ jdk_version }}"

   - name: JDK | Oracle JDK | Update the symbolic link to the JDK install
     file: path={{ java_home }} src=/usr/local/java/{{ jdk_version }} state=link force=yes

   - name: JDK | Oracle JDK | Add the JDK binaries to the system path (/etc/profile)
     lineinfile: dest=/etc/profile regexp='^JAVA_HOME={{java_home}}' line="JAVA_HOME={{java_home}}" state=present

   - name: JDK | Oracle JDK | Add the JDK binaries to the system path (/etc/profile)
     lineinfile: dest=/etc/profile regexp='^PATH=.*JAVA_HOME.*' line="PATH=$PATH:$HOME/bin:$JAVA_HOME/bin" state=present

   - name: Remove alternatives before we set them.
     command: rm -f /var/lib/alternatives/{{ item }}
     with_items:
       - java
       - javac
       - javaws
       - javah
       - jar
       - jps

   - name: JDK | Oracle JDK | Inform the system where Oracle JDK is located
     alternatives: name={{ item }} link=/usr/bin/{{ item }} path=/usr/local/java/jdk/bin/{{ item }}
     with_items:
       - java
       - javac
       - javaws
       - javah
       - jar
       - jps
